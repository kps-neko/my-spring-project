buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'gs-serving-web-content'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    mybatisSpringVersion = "1.2.3"
    mybatisGeneratorVersion = "1.3.2"
    mybatisVersion = "3.3.0"
    postgresJDBCVersion = "9.4-1205-jdbc4"
    springBootVersion = "1.3.0.RELEASE"
}

configurations {
    myBatisGenerator
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // tag::security[]
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    // end::security[]
    testCompile("junit:junit")

    // postgresql
    compile("org.postgresql:postgresql:$postgresJDBCVersion")

    // MyBatis
    compile("org.mybatis:mybatis:$mybatisVersion")
    compile("org.mybatis:mybatis-spring:$mybatisSpringVersion")

    // MyBatisGenerator
    myBatisGenerator ("org.mybatis.generator:mybatis-generator-core:$mybatisGeneratorVersion")
    myBatisGenerator ("org.postgresql:postgresql:$postgresJDBCVersion")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task libs(type: Sync) {
    from configurations.runtime
    into "$buildDir/libs"
}

task mybatis << {
    ant.taskdef(
        name: 'genfiles',
        classname: 'org.mybatis.generator.ant.GeneratorAntTask',
        classpath: configurations.myBatisGenerator.asPath)
    ant.genfiles(overwrite: 'true', configfile : "$projectDir/src/main/resources/generatorConfig.xml" , verbose: 'false')
}